"""
Approval Handler - –õ–∏–¥—ç—Ä–∏–π–Ω –∑”©–≤—à”©”©—Ä”©–ª/—Ç–∞—Ç–≥–∞–ª–∑–∞–ª –±–æ–ª–æ–≤—Å—Ä—É—É–ª–∞—Ö
"""

import re
from typing import Dict, Optional
from teams_auth_service import TeamsAuthService
from organization_service import OrganizationService

class ApprovalHandler:
    """–õ–∏–¥—ç—Ä–∏–π–Ω –∑”©–≤—à”©”©—Ä”©–ª/—Ç–∞—Ç–≥–∞–ª–∑–∞–ª –±–æ–ª–æ–≤—Å—Ä—É—É–ª–∞—Ö —Å–µ—Ä–≤–∏—Å"""
    
    def __init__(self):
        self.teams_service = TeamsAuthService()
        self.org_service = OrganizationService()
    
    def process_manager_response(self, manager_email: str, response_text: str) -> bool:
        """
        –õ–∏–¥—ç—Ä–∏–π–Ω —Ö–∞—Ä–∏—É–ª—Ç—ã–≥ –±–æ–ª–æ–≤—Å—Ä—É—É–ª–∞—Ö
        """
        try:
            response_lower = response_text.lower().strip()
            
            # APPROVE –ø–∞—Çtern —à–∞–ª–≥–∞—Ö
            approve_match = re.search(r'approve\s+([^\s]+)', response_lower)
            if approve_match:
                user_email = approve_match.group(1)
                return self._process_approval(manager_email, user_email)
            
            # REJECT –ø–∞—Çtern —à–∞–ª–≥–∞—Ö  
            reject_match = re.search(r'reject\s+([^\s]+)\s+(.+)', response_lower)
            if reject_match:
                user_email = reject_match.group(1)
                reason = reject_match.group(2)
                return self._process_rejection(manager_email, user_email, reason)
            
            print(f"–¢–æ–¥–æ—Ä—Ö–æ–π–≥“Ø–π –∫–æ–º–∞–Ω–¥: {response_text}")
            return False
            
        except Exception as e:
            print(f"‚ùå Manager response –±–æ–ª–æ–≤—Å—Ä—É—É–ª–∞—Ö–∞–¥ –∞–ª–¥–∞–∞: {str(e)}")
            return False
    
    def _process_approval(self, manager_email: str, user_email: str) -> bool:
        """–ó”©–≤—à”©”©—Ä”©–ª –±–æ–ª–æ–≤—Å—Ä—É—É–ª–∞—Ö"""
        
        try:
            # –•—ç—Ä—ç–≥–ª—ç–≥—á–∏–π–Ω –º—ç–¥—ç—ç–ª—ç–ª –∞–≤–∞—Ö
            user_profile = self.org_service.get_user_profile(user_email)
            user_name = user_profile.get('displayName', user_email) if user_profile else user_email
            
            # TODO: –≠–Ω–¥ —á”©–ª”©”©–Ω–∏–π —Ö“Ø—Å—ç–ª—Ç–∏–π–Ω –º—ç–¥—ç—ç–ª–ª–∏–π–≥ database-–∞–∞—Å –∞–≤–∞—Ö —Ö—ç—Ä—ç–≥—Ç—ç–π
            # –û–¥–æ–æ–≥–æ–æ—Ä placeholder –º—ç–¥—ç—ç–ª—ç–ª –∞—à–∏–≥–ª–∞–Ω–∞
            start_date = "2024-12-XX"  # Database-–∞–∞—Å –∞–≤–∞—Ö
            end_date = "2024-12-XX"    # Database-–∞–∞—Å –∞–≤–∞—Ö
            
            # Channel –¥—ç—ç—Ä –∑–∞—Ä–ª–∞—Ö
            success = self.teams_service.announce_leave_approval(
                user_email, user_name, start_date, end_date
            )
            
            if success:
                print(f"‚úÖ {user_email}-–Ω —á”©–ª”©”© –∑”©–≤—à”©”©—Ä”©–≥–¥”©–∂, channel –¥—ç—ç—Ä –∑–∞—Ä–ª–∞–≥–¥–ª–∞–∞")
                
                # TODO: Database –¥—ç—ç—Ä —á”©–ª”©”©–Ω–∏–π —Å—Ç–∞—Ç—É—Å—ã–≥ APPROVED –±–æ–ª–≥–æ—Ö
                # TODO: –•—ç—Ä—ç–≥–ª—ç–≥—á–∏–¥ –º—ç–¥—ç–≥–¥—ç–ª –∏–ª–≥—ç—ç—Ö
                
                return True
            else:
                print(f"‚ùå Channel –¥—ç—ç—Ä –∑–∞—Ä–ª–∞—Ö–∞–¥ –∞–ª–¥–∞–∞ –≥–∞—Ä–ª–∞–∞")
                return False
                
        except Exception as e:
            print(f"‚ùå Approval –±–æ–ª–æ–≤—Å—Ä—É—É–ª–∞—Ö–∞–¥ –∞–ª–¥–∞–∞: {str(e)}")
            return False
    
    def _process_rejection(self, manager_email: str, user_email: str, reason: str) -> bool:
        """–¢–∞—Ç–≥–∞–ª–∑–∞–ª –±–æ–ª–æ–≤—Å—Ä—É—É–ª–∞—Ö"""
        
        try:
            # –•—ç—Ä—ç–≥–ª—ç–≥—á–∏–π–Ω –º—ç–¥—ç—ç–ª—ç–ª –∞–≤–∞—Ö
            user_profile = self.org_service.get_user_profile(user_email)
            user_name = user_profile.get('displayName', user_email) if user_profile else user_email
            
            # Channel –¥—ç—ç—Ä –∑–∞—Ä–ª–∞—Ö
            success = self.teams_service.announce_leave_rejection(
                user_email, user_name, reason
            )
            
            if success:
                print(f"‚úÖ {user_email}-–Ω —á”©–ª”©”© —Ç–∞—Ç–≥–∞–ª–∑–∞–≥–¥–∞–∂, channel –¥—ç—ç—Ä –∑–∞—Ä–ª–∞–≥–¥–ª–∞–∞")
                
                # TODO: Database –¥—ç—ç—Ä —á”©–ª”©”©–Ω–∏–π —Å—Ç–∞—Ç—É—Å—ã–≥ REJECTED –±–æ–ª–≥–æ—Ö
                # TODO: –•—ç—Ä—ç–≥–ª—ç–≥—á–∏–¥ –º—ç–¥—ç–≥–¥—ç–ª –∏–ª–≥—ç—ç—Ö
                
                return True
            else:
                print(f"‚ùå Channel –¥—ç—ç—Ä –∑–∞—Ä–ª–∞—Ö–∞–¥ –∞–ª–¥–∞–∞ –≥–∞—Ä–ª–∞–∞")
                return False
                
        except Exception as e:
            print(f"‚ùå Rejection –±–æ–ª–æ–≤—Å—Ä—É—É–ª–∞—Ö–∞–¥ –∞–ª–¥–∞–∞: {str(e)}")
            return False
    
    def generate_help_message(self) -> str:
        """–õ–∏–¥—ç—Ä—Ç –∑–æ—Ä–∏—É–ª—Å–∞–Ω —Ç—É—Å–ª–∞–º–∂–∏–π–Ω –º–µ—Å—Å–µ–∂"""
        
        return """
ü§ñ **–ß”©–ª”©”©–Ω–∏–π —Ö“Ø—Å—ç–ª—Ç —É–¥–∏—Ä–¥–∞—Ö –∑–∞–∞–≤–∞—Ä:**

**–ó”©–≤—à”©”©—Ä”©—Ö:**
`APPROVE user@company.com`

**–¢–∞—Ç–≥–∞–ª–∑–∞—Ö:** 
`REJECT user@company.com —à–∞–ª—Ç–≥–∞–∞–Ω`

**–ñ–∏—à—ç—ç:**
‚Ä¢ `APPROVE tuvshin@company.com`
‚Ä¢ `REJECT tuvshin@company.com –∞–∂–∏–ª –∏—Ö –±–∞–π–≥–∞–∞`

üí° –ó”©–≤—à”©”©—Ä—Å–Ω–∏–π –¥–∞—Ä–∞–∞ –∞–≤—Ç–æ–º–∞—Ç–∞–∞—Ä channel –¥—ç—ç—Ä –∑–∞—Ä–ª–∞–≥–¥–∞–Ω–∞.
        """ 